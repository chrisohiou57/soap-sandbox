# Require SSL
server.ssl.enabled=true

# This requires the client to have a certificate that we trust (mTLS).
server.ssl.client-auth=need

# Tell Camel to use the global SSLContext we're configuring below.
camel.component.cxf.use-global-ssl-context-parameters=true

# This section configures the certificate for the server. It is the cert that will be presented to the client in the SSL handshake.
server.ssl.key-store=classpath:camel-app.jks
server.ssl.key-store-password=camelpw
server.ssl.key-alias=camel-app
server.ssl.key-store-type=PKCS12

# This section configures the client certificates that we want to trust. We use this to validate the client cert presented to us in the SSL handshake.
server.ssl.trust-store=classpath:camel-app.jks
server.ssl.trust-store-password=camelpw
server.ssl.trust-store-type=PKCS12

# This section configures the certificate for the server. It is the certificate that will be presented to the client in the SSL handshake.
camel.ssl.config.cert-alias=camel-app
camel.ssl.config.key-managers.key-password=camelpw
camel.ssl.config.key-managers.key-store.resource=classpath:camel-app.jks
camel.ssl.config.key-managers.key-store.password=camelpw
camel.ssl.config.key-managers.key-store.type=PKCS12

# This section configures the client certificates that we want to trust.
camel.ssl.config.trust-managers.key-store.resource=classpath:camel-app.jks
camel.ssl.config.trust-managers.key-store.password=camelpw
camel.ssl.config.trust-managers.key-store.type=PKCS12
